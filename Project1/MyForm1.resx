<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAmAAAAA0CAYAAAAt64QYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAGmRJREFUeF7tnQlUFFfWx0FpFhVtdgQFFAU1iWuiCUYiJiaRMQY3EhUSE4zrxAUn
        6mTBjEZFjRoV1Bg1MWpiRuOun0cFFFGJenABFA8q4GE/CD0sQ3O6a/5fVVEUNGLT0IW03fc3587Mvd22
        5f/We3Xr1av3zCBgZmbGGyENpCVBGBfUpk0HyrUmpIe0cHryJvi1ATIyMjIyMjIyspY1of4SA4Q0kJYE
        YVxQmzYdKNeakB7SwunJm+CLAUIaSEuCMC6oTZsOlGtNSA9p4fTkTfDFACENpGUt//vf/zBmzBhMmDAB
        kyZNItPTNm7cCIVCIahLPCuoTZsOlGtNSA9p4fTkTfDFwHNDRRauxcYiKbtSCBgWdMLWkpOTAysrKwwe
        PBgjRowg09NGjRqF9PR0QV3iWUFt2nSgXGtCekgLpydvgi8GDI6KPKReicO52MtIya0QgoA6fQ1etzJH
        ++Hrka4WggYEnbC1nD17FjKZDEqlUogQxPMHtWnToUVyrSrGwxsJiDt/FfdLVEJQE2X+HVyJi8H5v9Lx
        uEoI1oFRZCDpYhzikzKgYISgiBolGUm4GHcB1zNKWU86nuW5X5mXgstxsbiUkg/DHF7RH05P3gRfDBgO
        lUjZ+TH62lnAXDg2c5k9Bs06gEzuzGIysWlEOzbWF19db/hkbk0MS8vWZenSpXBxccH06dOFCNEcNmzY
        gDNnzgge8ayhNm066JRr5jESo0LRz649/CLvail4GOQc+wf83W0gs3WEfXsLtOn4AsL2Z9T+GSYP/7dk
        GDq36wT3nj7oIpehXfex2JRUM+igROrOEPTpxMbt7GErs0CnvmH4/UH1L6gfHcL8191hY2kLB/t2sGgr
        x0thv0H4WG+afe7rrBEL8whHw/3gYs1q0MMLDtbW6Br4Pf4qEz43Ijg9eRN8MWAoMFlb8LatOcxtB2F6
        9AEc2rUIw53bwMzCG3PPc7cGaqStehUyMxle/PIaDK0EMyQtG6cK+SmXkHArt0XuON577z34+fnB19dX
        iGihKh8plxJwK9dY731qURWk4srV+yjRsZP85JNPsHPnTsEjnjXPV5sm9KGxXDN5MVg2ygt2Xi+iR0dL
        DFqWouUaVIWrmxdg2cFklHCjVqXXsHxYR1h4zwV/KeO+kRAOH8se+OxkIVuusSguY8lAa8jH7UEx66pT
        I+HXwQkj114HN/tTmfFvfNLTEo7s5/nsH6i6FoUF//oTd0pZhy16Ln41GO3buiPsRO1TI31ozrnfNI0Y
        5O+dAKd2/bEwtojXoPzWWoyQ22DIiuTqrxgRnJ68Cb4YMBSUsX9Ht7ZmkL3yHVL5C1QJdv7NGuZt5Jh0
        sPriXBU/Hz0tzCHzW21wjyENSUvtsIVsdAgmfvkTdnwzEcHrkiUvZgcMGICpU6c2XoCp0xAdMhFf/rQD
        30wMxrpkwxvZlAomZx8+Gx+ObVvmYtycQyjie13tUAHWujw/bZrQl8ZyrTzzDYLD9+J20TnM9rJqpLio
        jxopy16GrMN4/CbUR+X7xqG91UhsLajpCMrx5xQHtHt7G1tgqXAzoj+suIJNnMWhxr3I12Apn4DfGngf
        R313BQbLLBGw8ZEQ0Y/mnPtN06gSByfbwWr4D8gS+8IyHJjkACv/dYJvPHB68ib4YsBQYPJ2Y6xDG5hb
        dMV7a2KRdHQ+Btm2gYXnpzhSc7Uq+gmjrM3Rxm4SDkhT6EuGIWmpHTWy/7qCB+ydmDotEkHTj0s+Cubt
        7Y1ly5bpUIBl468rD9j7RbYojAzC9OP6HQmjVOCxQll9R9kSVBajuKKhX69CWUkZ+99aKMvC/ZxylKRu
        RUjIFmTqcJBUgLUuz0+bJvRF51wrY5pegFXdwbqAjujg/z3ShIEDJmsXgpyt4TNlF1LK1MiPWYJX7T0w
        5Y88tv9SYPf77WH9t50oqf46T+WJT9HZciCW3n7yb1bGzIaXzAmhh1tvBExEJ43KsHuMNaze+RFFQgTs
        t29/OwhWXWcIvvHA6cmb4IsBw4FBzskleKOzTJgDZo62roHYdKtc+Jyl8jg+cW0DM0t/rMtosctsszAs
        LRuHKYhFxIRQbE3RWjY0mf/+979wdnbG3r17dXsEyea9IDYCE0K3otmHUnoNmyf1g6udM9yc5HAdEIpt
        N+ucNyIqXFv6Kpzs7GBXYy7v48dcHc4lZSo2ve2GkVG5QqCakoRVCOxuB3tHOeReb2NpTPUjBXVlKRQl
        JSjhTFGGSq7jrUjEjgWTMW62bnM1qABrXZ63Nk00H51zrWsBxuTi1Ko5mBEWgsB+bnAbMhP70uq+lMTg
        8aX1GO/THjbObnCw9UXor3fBl09MBtYNs4T8wwPVvkDVpYXwseyJ+fH1Okr279o70QUy79k4J9H8Kb3O
        fZ00UuHqP1+EzGEUomp0qczEoTAfyOynVPtGBKcnb4IvBgwHBa5FfYBetm0gc+wGT3lbmJtbwuO9jUiq
        uZYqYzHHqy3MZIPwbQN3Aa2JYWmpHXXmAXw+bgZ235F+3tWtW7dgY2ODy5cv61CAqZF54HOMm7EbzT8U
        FZIiBsJhaAQuF7OlD1OAmPCBkA9ZIXxel8fYNVoOv4h4JKekIIWz1EwUN1IMKTNOImKkO2Ts+fhm3QKs
        Mh4LerljzI9pULL/uftTELp4z8LZcgZFt87g8KFDOMTZ4bO4ef0UjiZxvWM59oeMw5a8xos+KsBal+ep
        TRP6oXOudS7AChAX9RUWfzEPYWNfhlt7e/QP24N7NbUTU4SE78ejl1tvjJkehje7tUenPpOx7QbbR6gf
        YO3rlrCb/KfG04mqxEXobeWDBRfrFmBqZPw6Ae5W3gg7WsDf/EmBVj2Yx4hZ93fMnDEDM1ibOX87rtU9
        JB01YvJOYMEr9pDZOKFbT084dbRD1y52sHCfJnzDeOD05E3wxYChUHZ6Brpx87t8p+FItgpVj45hdl8b
        tgizgV/kHfY0Y1GewYwuXAE2GCvu6jCE8AxpHS1VSD+wFPO/O1r9piirUtaxlViw8t84FLUQK489qtaN
        oywB0V9sxPnix/gtuAt835yMkJBQhP1wSfujsyayY8cOdOjQAWlpaUIB9rRjPI5Hhb8huIsv3pwcgpDQ
        MPxwqTlHUo6LG2bg22P5YufDzRX0cZwseHWoisd8Xx/hpQ4dUZ7FLB9PBCzcikX+HTQKMP7v6RqGUzW9
        JHeD4O2J6aefXH6DyTuCheNDsWDhpwj+fB8e8lqU4dKWp+WJCrDWxpD6R6Jl0TnXuhZgGjDI3f8h3C3s
        MX4v98CNQdauIDjbDcPyv0qrv6K4ijUjnWDpuwDxlUXYPsoK1qN3aTyCVJ6ezhZa7LXvTk1vwaDgTDgG
        dHTA8FVX2d5EOrTrUYKE7V9jyeLFWMzakm9/h8b03aZoxJQh60Y8YmIScCu7hL2Z7g+bl5cJHxoPnJ68
        Cb4YMAyqkLioNyzMLNBj3gWhIFAjbSX31mMbOH98tPpOoPx3TOxoDnPrUfip9sGxQdBaWqozfsZYt84I
        2pUJZVoU3nHtiWnHcnF/QwDkfpHinIOivePhOqTmBYeWIywsDP37969TgD3tGKW7W9OkFHHzekMesFHw
        a2HyovFW+x4IGDsMvbq6o/ugsYg4kaW9k2CKkZtXwf5vDjaPsNUowBS7RsP2tcjaF0K4RwdCkdbwv60K
        5eV1iz81HmrJExVgrYvh9I9ES6NzrptVgHHdxyYEWMowZGUa65Vhz9h2sBq1HY+rP+apPBwKRys/rL5f
        gbi/d4Nlz/mofdqoxr3VfrB2nYpjwnNJxaV/YZiDHEP+GavTSz1NQa9zv5kaQZ2Kla+2h094ghAwHjg9
        eRN8MWAYMMje8jY6mJtD5vU+lv16BEd//x5T+nAjYLZ4a3P1+inVb3qYwaLHPFxozmBJC9J6WrLa/f4h
        PNyGY/QQF/RdGMe/tszkbEegwytYxt2aMHnYMdoFw9c/qB1paSG45Sc+/vhjjQLsaccoPRVI3hoED6c3
        sOr6k5NRq64ux/BeAQj//RoePLyNEyv/hq5yP6zS5XH2EwUYg5xNAbAN2IScms6PyceWkR0wdM19nXXW
        licqwFoXw+kfiZam0VyrivEo/R7SUvYg1N0SLy04hTv30pEtrCmjuhWFKe+EYSd3J6W+i5+/jMC+a/nV
        gwmqXMQsHgxbmQ/CL3Kj40qcm+0JmftE7H4oXMjUeTg5sxcs3T/F8XKg/OwsdJO5IWj7XX7wQflwPz7y
        tkL3WWf4ka6q1GgEulrBc8IWJNxN4/vbtLR7SM+Rpmdt1rnfiEasSIia8g7CdnJFKPdPZr9bJPS95ek4
        vPBV2Du+iy33de09nx84PXkTfDFgMFTcQHRwL3Rqay4em7nMEYPCduOO8ESneO84dDJvA7vg/S10AW8+
        raol8wjR7IW/rWsoDonCFGHveBcM+CYJyqwojHR5F9uyG79NYgrPYt28OZgzp77Nx7bExqve3r17Y/Xq
        1fUKMJYGj1E7TToWpgCxSwPg7j4Cyy8+fsoIVD3U97CKveN6LfKeWDAxBb9hSu8RWH2zXlHWwAhY8Y5A
        2A5dWzuhnsnEev8OeCuae5NJV56eJyrAWheD6h+JFqWxXCvPzkTXtsJFVDQLcbSm8lAIHGT98M0N7kYq
        Bwdm9oO9TIYOjp3h3NESbW17ImjtJfGRIreQ6rxXnWFpZQ9P317o7twO1p2HIvzIo+q+g+3PTi8ZCmf2
        N2ydnNHJ0hpdRn6HeG6eK/uNzB+Gw9q8/vGYwaLPYu5P6w33W02lMY1YkRDiIEO/b27wbuGvYyGXtYO9
        qyvsbFiteozGspjaqSTGhKiH4IsBw4JBeU4yLsedw7kLV5FWUHcuTQVOhLmjrbkcQbuFxesMiNbUsuzS
        PzHQ+QUM6uWMoStusPdX1SgOf4QufZfgyLoRcBv7Kwp1EY2pQrlCeHtPwxQob2CgqO52Q9wm3O7u7jh6
        9OgTBdjTjlEruh6LOhMHpr0Ipz4faXmxgEHJ9T+w+Y8kiO9HsgXThjfaa45Ysb91bs9RpNSfUNFAAaaM
        nQPv7rMRU/OPqTqPz3t6NDgHTBtPyxMVYK2L4fWPREuhX65LceozLziP2qrxdrOyIA1XL8Qg5uINZJY2
        NKpTifw7iYg7dw7n/7qHwgbubytybiMh7jyu3C3Qrc+UiJY490tPfQYv51HYKoqkhiIjCfExMYi/kYkG
        JTISOD15E3wx8NxQdgyfuLdFG5cpOMgtFWxgtJqWijiEv+QE/zW3objyFQY6vIKIROHxW8UZzPTugT69
        PDDlYN3pnPrDFVvcJtFyuVyIVG/Czfn37t3TLMC0HaPeqJCy1h/2Xh/il5QCFBYW8lZUVMoWTUVIjjmJ
        xMzqnq3sRBi6OozE+hTu71Yj7/Q89HcYisiUBirL+jRQgHH6zujuieA9D9mjUCFj3wfw8grDCWFerc48
        JU9UgLUuz1X/SOiFPrlWP9iEtzzfRbQhblLcTCQ/99UPsOktT7wbnV57s2tCcHryJvhi4HlBlboNHwWM
        wJSoG5K+tScVraNlMU7P9oWD/xrc5kUpR8KS/pD3X4yL/AhOFRLCfSDrEoaTDS2LpQfcPoUdO3aEubk5
        MjIy+Njp06dhYWEBlUpVpwBr7Bj1pOo85npb1J7ggplbB7G3oOcwy8MGb28VJvxz+699OQIeds7o7u0O
        e7fBmLHvnm7nU0MFGPureScX4XV3O7h5ukHu+hq+ONWcIfSG80QFWOvSOm2aaA30yTWTfxuX7ug47eE5
        QfJzn8nH7Ut38NiYRGoCNdclUdWaACENhqllFa4segm+8y5IPnx9//59JCcnw97eHqGhoXzs66+/hoeH
        B///n5gD1iowKNg1BZ/u16w+mfICZGbmoVSHgS+dUCmQm5mN4mbfGTScJyrAWhfqH00HyrUmpIe0cHry
        JvhigJCGZmmpKodCY1kC6VAlH8Tqr0MwyM0Pq1pwj8WFCxfy635xBAYG8sZhEAWYOgP7v9uMxKY+EnyG
        aMuTVAVYVVkJylrmNDNqqH80HSjXmpAe0sLpyZvgiwFCGpqjJb+OlP96wZMWVepuzAsNQ8Sf6S06efM/
        //kP/xjy+PHj6NevH5YsWcLHDWMEzPDRlie9C7CSBKwK7A47e0fI5V54e2nMU17E0GOLJiOG+kfTgXKt
        CekhLZyevAm+GCCkoTlatmQB9ix5+eWXMWTIEHTr1g2//PILH6MCTH/0K8AqEb+gF9zH/AhuqzXl3Z8Q
        1MUbs842NBmweVs0GTvUP5oOlGtNSA9p4fTkTfDFACENumlZjtQD/8JnE97H+M9WYP+yd4yiAONGv9q0
        aQNHR0dcuXKFj1EBpj+NFmDqTJw6cLHhia3ctks+XRFWu08SYud4w3P66SdHRJuzRZMJQP2j6UC51oT0
        kBZOT94EXwwQ0tC4lgxy9gXD3S0Ai34+isPb5mCokwyWRlCAcdja2vJvQHLrdHHk5eXx+4QRzYfbV/PC
        hQuC1wBVV/DV9B+EfSXrodiF0bavIbJ2nyRkrPNHhzejUP/JYrO2aDIBqH80HSjXmpAe0sLpyZvgiwFC
        GhrVksnCDwEdMez7mu2A1Ehd/jLa1yvAmPyTWB42FVOn1rdp+CGhJWdz6ce0adMgk8kEj3gmaCnA+L3n
        bAOwqXafJORvGYkOQ9eg/k4fem3RZMRQ/2g6UK41IT2khdOTN8EXA4Q0NKolt15VDzd8crx2pXZu81W3
        N5o/AhYfH88//jME2759O4YNG9bgZ2T6W26usP4YU4iz6+ZVb8k0+wMM6TscU4UtmuZvS6xd06x4BwJt
        h2Jt7T5JyFzvjw5vRSOvsbn1DWzRZIpQ/2g6UK41IT2khdOTN8EXA4Q0NKql6jq+6muHsXtqN0Is3TsO
        9vULMMUNHPpxC7ZsqW8/4lSa5ojE3LlzxaUfyIzbuGK7GgZV5YrqLZkKY/DFp6uRXFy9RZOi7v5MyljM
        8e6O2bX7JOH85z3h8cQcMB23aDJBqH80HSjXmpAe0sLpyZvgiwFCGhrXUonLi16Ec8BqJHErwJffxvqR
        9rCqPwes8hGSLsQhLq6+XUByvmkvC0DUQ9scMFTgzIzu8Azeg4dsXabK2IcPvLwQxu+TxKA4NRYnLz8E
        Nx6r1xZNRgz1j6YD5VoT0kNaOD15E3wxQEiDTloqErEuqCccnL3QrYsPRr7nB/e3NgofEkQT0VqAsWVW
        3kkset0ddm6ecJO74rUvTqG6hq/CxQU+sHljA7I4X58tmowY6h9NB8q1JqSHtHB68ib4YoCQBt21ZFBR
        mI3cElO8vDFQKh5DoWzCSJ6qDEX5JfxIDdEcVFDkZiJbh32SJN+i6TmH+kfTgXKtCekhLZyevAm+GCCk
        gbTUTum1zZjUzxV2zm5wkrtiQOg23NRhg3DVzQgMsA/GH9zTMYJ4hlCbNh0o15qQHtLC6cmb4IsBQhpI
        Sy2okhAx0AFDIy6jmAGYghiED5RjyIoU4QtaqMjCzcS7KKLpb8Qzhtq06UC51oT0kBZOT94EXwwQ0kBa
        aqH8IjbM+BbHxJcIqhA/3weOkw8KPoviJvYtnYEPg97D2I//gajzOfwbeEz2CUQu3oUkFYPsE6uxfP95
        HI+cieAx72Py/CjE13kxQZV+AEvnf4ejmdWTotRZx7BywUr8+1AUFq48hkfiXKkyJER/gY3niwWfIJ6E
        2rTpQLnWhPSQFk5P3gRfDBDSQFo2gdI4zOstR8DGB0KgHCeneaL7uO9xOOYcDq0Lho/dCGx6oK7zCFKF
        mxED0VHeEyPmbsTe37bgcz9HOI79VfgNFnUGfh7rhs5Bu5CpTEPUO67oOe0Ycu9vQIDcD5FpQgVWtBfj
        XYfgu9SnzF4nCBZq06YD5VoT0kNaOD15E3wxQEgDaakjFcnYGuQBpzdW4XrNvC6mAD8FdoLv1F+QmM0G
        mWLcu3oDWWV154BxBdgAtHt9LWrWFq088hE6+4ZXOwJM9u/40MMNw0cPgUvfhYjjll1jcrA90AGvLEuG
        CgzydoyGy/D14u8QRENQmzYdKNeakB7SwunJm+CLAUIaSMvGYQpisTTAHe4jluNivR2kS69uRsgrbrCx
        aAe3fu8gbOUJPKx6sgCzm7gfNXWb8twsdPeZK3g1MHgUPRId2roi9FDtordFe8fDZcA3SFJmIWqkC97d
        ls1+kyCeDrVp04FyrQnpIS2cnrwJvhggpIG01I468wCmveiEPh/txp0G1pSoUhTgcaUaZZmJOBIdjgA3
        W7y5OfOJAsw++A/tBVjZJfxzoDNeGNQLzkNX4EbNsu+Kw/ioS18sObIOI9zG4tdCKr8I7VCbNh0o15qQ
        HtLC6cmb4IsBQhpISy2oUrDW3x5eH/6ClIJCFBZyVoSiUqE6Ut3C0kFyDItMrl7vS3Uf696Qw//7+00s
        wBSIC38JTv5rcFtxBV8NdMArEYnC9ytwZqY3evTpBY8pB1HCxwji6VCbNh0o15qQHtLC6cmb4IsBQhpI
        y6dTdX4uvC2EE1A0c1gH7RG+waAoJgIBXe3h6vMCenXtDJ/AFYgvZppUgBWfng1fB3+suV296Gh5whL0
        l/fH4ovc3k/scSSEw0fWBWEndViAjDB5qE2bDpRrTUgPaRGve4IvBghpIC0lgKlAYeZDPHqsuV20VFRd
        WYSXfOfhQsv8PGFkUJs2HSjXmpAe0sLpyZvgiwFCGkhLA0aVjIOrv0bIIDf4reLehCSIxqE2bTpQrjUh
        PaSF05M3wRcDhDSQlgaMKhW754UiLOJPpNPoF6Ej1KZNB8q1JqSHtHB68ib4YoCQBtKSIIwLatOmA+Va
        E9JDWjg9eRN8MUBIA2lJEMYFtWnTgXKtCekhLZyevAm+GCCkgbQkCOOC2rTpQLnWhPSQFk5P3gRfDBDS
        QFoShHFBbdp0oFxrQnpIC6cnb4IvBghpIC0JwrigNm06UK41IT2khdOTN8EXA4Q0kJYEYVxQmzYdKNea
        kB7SwunJm+DXBsjIyMjIyMjIyFrWhPpLDBDSQFoShHFBbdp0oFxrQnpIC6enmZkZ/h8A093/rnas9wAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>